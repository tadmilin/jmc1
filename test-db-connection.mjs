// ‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡∏Å‡∏≤‡∏£‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠ MongoDB
import { MongoClient } from 'mongodb'
import dotenv from 'dotenv'

// ‡πÇ‡∏´‡∏•‡∏î environment variables
dotenv.config({ path: '.env.local' })

async function testDatabaseConnection() {
  try {
    console.log('üîç ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡∏Å‡∏≤‡∏£‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠ MongoDB...')

    const uri = process.env.DATABASE_URI
    if (!uri) {
      throw new Error('‚ùå DATABASE_URI ‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤')
    }

    console.log('üåê MongoDB URI:', uri.replace(/:[^@]*@/, ':***@'))

    // ‡∏™‡∏£‡πâ‡∏≤‡∏á client
    const client = new MongoClient(uri, {
      ssl: true,
      tls: true,
      tlsAllowInvalidCertificates: false,
      tlsAllowInvalidHostnames: false,
      retryWrites: true,
      w: 'majority',
      maxPoolSize: 10,
      serverSelectionTimeoutMS: 5000,
      socketTimeoutMS: 45000,
    })

    // ‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡∏Å‡∏≤‡∏£‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠
    await client.connect()
    console.log('‚úÖ ‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠ MongoDB ‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à!')

    // ‡∏ó‡∏î‡∏™‡∏≠‡∏ö ping
    const db = client.db()
    await db.admin().ping()
    console.log('‚úÖ Ping MongoDB ‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à!')

    // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö collections
    const collections = await db.listCollections().toArray()
    console.log(
      'üìÅ Collections:',
      collections.map((c) => c.name),
    )

    // ‡∏õ‡∏¥‡∏î‡∏Å‡∏≤‡∏£‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠
    await client.close()
    console.log('üéâ MongoDB ‡∏û‡∏£‡πâ‡∏≠‡∏°‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô!')
  } catch (error) {
    console.error('üí• MongoDB ‡∏°‡∏µ‡∏õ‡∏±‡∏ç‡∏´‡∏≤:', error.message)
    process.exit(1)
  }
}

testDatabaseConnection()
