/* tslint:disable */
/* eslint-disable */
/**
 * This file was automatically generated by Payload.
 * DO NOT MODIFY IT BY HAND. Instead, modify your source Payload config,
 * and re-run `payload generate:types` to regenerate this file.
 */

/**
 * Supported timezones in IANA format.
 *
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "supportedTimezones".
 */
export type SupportedTimezones =
  | 'Pacific/Midway'
  | 'Pacific/Niue'
  | 'Pacific/Honolulu'
  | 'Pacific/Rarotonga'
  | 'America/Anchorage'
  | 'Pacific/Gambier'
  | 'America/Los_Angeles'
  | 'America/Tijuana'
  | 'America/Denver'
  | 'America/Phoenix'
  | 'America/Chicago'
  | 'America/Guatemala'
  | 'America/New_York'
  | 'America/Bogota'
  | 'America/Caracas'
  | 'America/Santiago'
  | 'America/Buenos_Aires'
  | 'America/Sao_Paulo'
  | 'Atlantic/South_Georgia'
  | 'Atlantic/Azores'
  | 'Atlantic/Cape_Verde'
  | 'Europe/London'
  | 'Europe/Berlin'
  | 'Africa/Lagos'
  | 'Europe/Athens'
  | 'Africa/Cairo'
  | 'Europe/Moscow'
  | 'Asia/Riyadh'
  | 'Asia/Dubai'
  | 'Asia/Baku'
  | 'Asia/Karachi'
  | 'Asia/Tashkent'
  | 'Asia/Calcutta'
  | 'Asia/Dhaka'
  | 'Asia/Almaty'
  | 'Asia/Jakarta'
  | 'Asia/Bangkok'
  | 'Asia/Shanghai'
  | 'Asia/Singapore'
  | 'Asia/Tokyo'
  | 'Asia/Seoul'
  | 'Australia/Brisbane'
  | 'Australia/Sydney'
  | 'Pacific/Guam'
  | 'Pacific/Noumea'
  | 'Pacific/Auckland'
  | 'Pacific/Fiji';

export interface Config {
  auth: {
    users: UserAuthOperations;
  };
  blocks: {};
  collections: {
    categories: Category;
    media: Media;
    pages: Page;
    posts: Post;
    products: Product;
    users: User;
    'quote-requests': QuoteRequest;
    redirects: Redirect;
    forms: Form;
    'form-submissions': FormSubmission;
    search: Search;
    'payload-jobs': PayloadJob;
    'payload-locked-documents': PayloadLockedDocument;
    'payload-preferences': PayloadPreference;
    'payload-migrations': PayloadMigration;
  };
  collectionsJoins: {};
  collectionsSelect: {
    categories: CategoriesSelect<false> | CategoriesSelect<true>;
    media: MediaSelect<false> | MediaSelect<true>;
    pages: PagesSelect<false> | PagesSelect<true>;
    posts: PostsSelect<false> | PostsSelect<true>;
    products: ProductsSelect<false> | ProductsSelect<true>;
    users: UsersSelect<false> | UsersSelect<true>;
    'quote-requests': QuoteRequestsSelect<false> | QuoteRequestsSelect<true>;
    redirects: RedirectsSelect<false> | RedirectsSelect<true>;
    forms: FormsSelect<false> | FormsSelect<true>;
    'form-submissions': FormSubmissionsSelect<false> | FormSubmissionsSelect<true>;
    search: SearchSelect<false> | SearchSelect<true>;
    'payload-jobs': PayloadJobsSelect<false> | PayloadJobsSelect<true>;
    'payload-locked-documents': PayloadLockedDocumentsSelect<false> | PayloadLockedDocumentsSelect<true>;
    'payload-preferences': PayloadPreferencesSelect<false> | PayloadPreferencesSelect<true>;
    'payload-migrations': PayloadMigrationsSelect<false> | PayloadMigrationsSelect<true>;
  };
  db: {
    defaultIDType: string;
  };
  globals: {
    header: Header;
    footer: Footer;
    'category-showcase': CategoryShowcase;
    'site-settings': SiteSetting;
  };
  globalsSelect: {
    header: HeaderSelect<false> | HeaderSelect<true>;
    footer: FooterSelect<false> | FooterSelect<true>;
    'category-showcase': CategoryShowcaseSelect<false> | CategoryShowcaseSelect<true>;
    'site-settings': SiteSettingsSelect<false> | SiteSettingsSelect<true>;
  };
  locale: null;
  user: User & {
    collection: 'users';
  };
  jobs: {
    tasks: {
      schedulePublish: TaskSchedulePublish;
      inline: {
        input: unknown;
        output: unknown;
      };
    };
    workflows: unknown;
  };
}
export interface UserAuthOperations {
  forgotPassword: {
    email: string;
    password: string;
  };
  login: {
    email: string;
    password: string;
  };
  registerFirstUser: {
    email: string;
    password: string;
  };
  unlock: {
    email: string;
    password: string;
  };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "categories".
 */
export interface Category {
  id: string;
  title: string;
  description?: string | null;
  /**
   * ขนาดแนะนำ 400x400 พิกเซล
   */
  image?: (string | null) | Media;
  /**
   * กำหนดลำดับการแสดง (เลขน้อยแสดงก่อน)
   */
  sortOrder?: number | null;
  /**
   * ลำดับที่จะแสดงในหน้าเว็บ (เลขน้อยแสดงก่อน) - ใช้สำหรับจัดลำดับเฉพาะหน้าเว็บ
   */
  displayOrder?: number | null;
  isActive?: boolean | null;
  slug?: string | null;
  slugLock?: boolean | null;
  parent?: (string | null) | Category;
  breadcrumbs?:
    | {
        doc?: (string | null) | Category;
        url?: string | null;
        label?: string | null;
        id?: string | null;
      }[]
    | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "media".
 */
export interface Media {
  id: string;
  alt: string;
  caption?: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  } | null;
  updatedAt: string;
  createdAt: string;
  url?: string | null;
  thumbnailURL?: string | null;
  filename?: string | null;
  mimeType?: string | null;
  filesize?: number | null;
  width?: number | null;
  height?: number | null;
  focalX?: number | null;
  focalY?: number | null;
  sizes?: {
    thumbnail?: {
      url?: string | null;
      width?: number | null;
      height?: number | null;
      mimeType?: string | null;
      filesize?: number | null;
      filename?: string | null;
    };
    card?: {
      url?: string | null;
      width?: number | null;
      height?: number | null;
      mimeType?: string | null;
      filesize?: number | null;
      filename?: string | null;
    };
    feature?: {
      url?: string | null;
      width?: number | null;
      height?: number | null;
      mimeType?: string | null;
      filesize?: number | null;
      filename?: string | null;
    };
  };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "pages".
 */
export interface Page {
  id: string;
  title: string;
  hero: {
    type: 'none' | 'highImpact' | 'mediumImpact' | 'lowImpact';
    colorTheme?: ('light' | 'lightBlue' | 'dark' | 'gradient') | null;
    /**
     * รูปพื้นหลังสำหรับ Hero Section
     */
    backgroundImage?: (string | null) | Media;
    layoutVariant?: ('standard' | 'reversed' | 'centered') | null;
    showDecorations?: boolean | null;
    richText?: {
      root: {
        type: string;
        children: {
          type: string;
          version: number;
          [k: string]: unknown;
        }[];
        direction: ('ltr' | 'rtl') | null;
        format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
        indent: number;
        version: number;
      };
      [k: string]: unknown;
    } | null;
    links?:
      | {
          link: {
            type?: ('reference' | 'custom') | null;
            newTab?: boolean | null;
            reference?:
              | ({
                  relationTo: 'pages';
                  value: string | Page;
                } | null)
              | ({
                  relationTo: 'posts';
                  value: string | Post;
                } | null);
            url?: string | null;
            label: string;
            /**
             * Choose how the link should be rendered.
             */
            appearance?: ('default' | 'outline') | null;
          };
          id?: string | null;
        }[]
      | null;
    media?: (string | null) | Media;
    /**
     * เพิ่มรูปภาพหลายรูปเพื่อแสดงเป็นสไลด์โชว์
     */
    slideImages?:
      | {
          image: string | Media;
          caption?: string | null;
          id?: string | null;
        }[]
      | null;
    /**
     * เปิด/ปิดการแสดงเมนูหมวดหมู่แบบ Dropdown
     */
    showCategoriesDropdown?: boolean | null;
    /**
     * จำนวนหมวดหมู่สูงสุดที่จะแสดงในเมนู
     */
    categoriesLimit?: number | null;
    featuredText?: string | null;
    /**
     * เลือกเพื่อแสดงกรอบเนื้อหาเพิ่มเติมทางด้านขวาของ Hero (สำหรับ High/Medium Impact)
     */
    displayFrame?: boolean | null;
    /**
     * เพิ่มเนื้อหาต่างๆ ที่จะแสดงในกรอบด้านขวา (เมื่อเปิดใช้งาน)
     */
    framedHeroContent?:
      | (
          | {
              text?: {
                root: {
                  type: string;
                  children: {
                    type: string;
                    version: number;
                    [k: string]: unknown;
                  }[];
                  direction: ('ltr' | 'rtl') | null;
                  format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
                  indent: number;
                  version: number;
                };
                [k: string]: unknown;
              } | null;
              id?: string | null;
              blockName?: string | null;
              blockType: 'heroContentText';
            }
          | {
              image: string | Media;
              caption?: string | null;
              id?: string | null;
              blockName?: string | null;
              blockType: 'heroContentImage';
            }
          | {
              /**
               * กำหนดความสูงของตัวเว้นระยะเป็นพิกเซล
               */
              height?: number | null;
              id?: string | null;
              blockName?: string | null;
              blockType: 'heroContentSpacer';
            }
        )[]
      | null;
    /**
     * เพิ่มช่องที่มีไอคอน, หัวข้อ, คำอธิบาย และลิงก์ (แสดงผลด้านล่าง Hero หลัก) - หน้าเว็บจะแสดงตามจำนวนจริงที่สร้างไว้เท่านั้น
     */
    heroActionSlots?:
      | {
          icon: string | Media;
          title: string;
          description?: string | null;
          slotLink?:
            | {
                link: {
                  type?: ('reference' | 'custom') | null;
                  newTab?: boolean | null;
                  reference?:
                    | ({
                        relationTo: 'pages';
                        value: string | Page;
                      } | null)
                    | ({
                        relationTo: 'posts';
                        value: string | Post;
                      } | null);
                  url?: string | null;
                  label: string;
                };
                id?: string | null;
              }[]
            | null;
          id?: string | null;
        }[]
      | null;
    /**
     * เพิ่มปุ่มโซเชียลมีเดีย (Line, Facebook, เบอร์โทร) ที่จะแสดงใต้หมวดหมู่สินค้า
     */
    socialMediaButtons?:
      | {
          /**
           * เช่น "Line", "Facebook", "โทรศัพท์"
           */
          label: string;
          /**
           * รูปไอคอนสำหรับปุ่ม (แนะนำขนาด 32x32px หรือ 64x64px)
           */
          icon: string | Media;
          /**
           * เช่น https://line.me/ti/p/your-line-id, https://www.facebook.com/your-page, tel:0801234567
           */
          url: string;
          /**
           * เปิดลิงก์ในแท็บใหม่หรือไม่
           */
          newTab?: boolean | null;
          id?: string | null;
        }[]
      | null;
  };
  layout: (
    | CallToActionBlock
    | CodeBlock
    | ContentBlock
    | MediaBlock
    | ArchiveBlock
    | FormBlock
    | ImageSliderBlock
    | CategoryGridBlock
    | GoogleMapBlock
    | ServiceFeaturesBlock
    | ProductsBlock
    | QuoteRequestFormBlock
  )[];
  meta?: {
    /**
     * หัวข้อที่จะแสดงใน Google Search (ควรไม่เกิน 60 ตัวอักษร)
     */
    title?: string | null;
    /**
     * คำอธิบายที่จะแสดงใน Google Search (ควรไม่เกิน 160 ตัวอักษร)
     */
    description?: string | null;
    /**
     * คำค้นหาสำคัญ (คั่นด้วยเครื่องหมายจุลภาค)
     */
    keywords?: string | null;
    /**
     * รูปภาพที่จะแสดงเมื่อแชร์ในโซเชียล
     */
    image?: (string | null) | Media;
  };
  publishedAt?: string | null;
  slug?: string | null;
  slugLock?: boolean | null;
  updatedAt: string;
  createdAt: string;
  _status?: ('draft' | 'published') | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "posts".
 */
export interface Post {
  id: string;
  title: string;
  heroImage?: (string | null) | Media;
  content: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  };
  relatedPosts?: (string | Post)[] | null;
  categories?: (string | Category)[] | null;
  meta?: {
    title?: string | null;
    /**
     * Maximum upload file size: 12MB. Recommended file size for images is <500KB.
     */
    image?: (string | null) | Media;
    description?: string | null;
  };
  publishedAt?: string | null;
  authors?: (string | User)[] | null;
  populatedAuthors?:
    | {
        id?: string | null;
        name?: string | null;
      }[]
    | null;
  slug?: string | null;
  slugLock?: boolean | null;
  updatedAt: string;
  createdAt: string;
  _status?: ('draft' | 'published') | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "users".
 */
export interface User {
  id: string;
  name: string;
  role: 'admin' | 'user';
  updatedAt: string;
  createdAt: string;
  email: string;
  resetPasswordToken?: string | null;
  resetPasswordExpiration?: string | null;
  salt?: string | null;
  hash?: string | null;
  loginAttempts?: number | null;
  lockUntil?: string | null;
  password?: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "CallToActionBlock".
 */
export interface CallToActionBlock {
  richText?: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  } | null;
  links?:
    | {
        link: {
          type?: ('reference' | 'custom') | null;
          newTab?: boolean | null;
          reference?:
            | ({
                relationTo: 'pages';
                value: string | Page;
              } | null)
            | ({
                relationTo: 'posts';
                value: string | Post;
              } | null);
          url?: string | null;
          label: string;
          /**
           * Choose how the link should be rendered.
           */
          appearance?: ('default' | 'outline') | null;
        };
        id?: string | null;
      }[]
    | null;
  id?: string | null;
  blockName?: string | null;
  blockType: 'cta';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "CodeBlock".
 */
export interface CodeBlock {
  language?: ('html' | 'typescript' | 'javascript' | 'css') | null;
  code: string;
  id?: string | null;
  blockName?: string | null;
  blockType: 'code';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "ContentBlock".
 */
export interface ContentBlock {
  columns?:
    | {
        size?: ('oneThird' | 'half' | 'twoThirds' | 'full') | null;
        richText?: {
          root: {
            type: string;
            children: {
              type: string;
              version: number;
              [k: string]: unknown;
            }[];
            direction: ('ltr' | 'rtl') | null;
            format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
            indent: number;
            version: number;
          };
          [k: string]: unknown;
        } | null;
        enableLink?: boolean | null;
        link?: {
          type?: ('reference' | 'custom') | null;
          newTab?: boolean | null;
          reference?:
            | ({
                relationTo: 'pages';
                value: string | Page;
              } | null)
            | ({
                relationTo: 'posts';
                value: string | Post;
              } | null);
          url?: string | null;
          label: string;
          /**
           * Choose how the link should be rendered.
           */
          appearance?: ('default' | 'outline') | null;
        };
        id?: string | null;
      }[]
    | null;
  id?: string | null;
  blockName?: string | null;
  blockType: 'content';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "MediaBlock".
 */
export interface MediaBlock {
  media: string | Media;
  id?: string | null;
  blockName?: string | null;
  blockType: 'mediaBlock';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "ArchiveBlock".
 */
export interface ArchiveBlock {
  introContent?: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  } | null;
  populateBy?: ('collection' | 'selection') | null;
  relationTo?: 'posts' | null;
  categories?: (string | Category)[] | null;
  limit?: number | null;
  selectedDocs?:
    | {
        relationTo: 'posts';
        value: string | Post;
      }[]
    | null;
  id?: string | null;
  blockName?: string | null;
  blockType: 'archive';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "FormBlock".
 */
export interface FormBlock {
  form: string | Form;
  enableIntro?: boolean | null;
  introContent?: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  } | null;
  id?: string | null;
  blockName?: string | null;
  blockType: 'formBlock';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "forms".
 */
export interface Form {
  id: string;
  title: string;
  fields?:
    | (
        | {
            name: string;
            label?: string | null;
            width?: number | null;
            required?: boolean | null;
            defaultValue?: boolean | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'checkbox';
          }
        | {
            name: string;
            label?: string | null;
            width?: number | null;
            required?: boolean | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'country';
          }
        | {
            name: string;
            label?: string | null;
            width?: number | null;
            required?: boolean | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'email';
          }
        | {
            message?: {
              root: {
                type: string;
                children: {
                  type: string;
                  version: number;
                  [k: string]: unknown;
                }[];
                direction: ('ltr' | 'rtl') | null;
                format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
                indent: number;
                version: number;
              };
              [k: string]: unknown;
            } | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'message';
          }
        | {
            name: string;
            label?: string | null;
            width?: number | null;
            defaultValue?: number | null;
            required?: boolean | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'number';
          }
        | {
            name: string;
            label?: string | null;
            width?: number | null;
            defaultValue?: string | null;
            placeholder?: string | null;
            options?:
              | {
                  label: string;
                  value: string;
                  id?: string | null;
                }[]
              | null;
            required?: boolean | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'select';
          }
        | {
            name: string;
            label?: string | null;
            width?: number | null;
            required?: boolean | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'state';
          }
        | {
            name: string;
            label?: string | null;
            width?: number | null;
            defaultValue?: string | null;
            required?: boolean | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'text';
          }
        | {
            name: string;
            label?: string | null;
            width?: number | null;
            defaultValue?: string | null;
            required?: boolean | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'textarea';
          }
      )[]
    | null;
  submitButtonLabel?: string | null;
  /**
   * Choose whether to display an on-page message or redirect to a different page after they submit the form.
   */
  confirmationType?: ('message' | 'redirect') | null;
  confirmationMessage?: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  } | null;
  redirect?: {
    url: string;
  };
  /**
   * Send custom emails when the form submits. Use comma separated lists to send the same email to multiple recipients. To reference a value from this form, wrap that field's name with double curly brackets, i.e. {{firstName}}. You can use a wildcard {{*}} to output all data and {{*:table}} to format it as an HTML table in the email.
   */
  emails?:
    | {
        emailTo?: string | null;
        cc?: string | null;
        bcc?: string | null;
        replyTo?: string | null;
        emailFrom?: string | null;
        subject: string;
        /**
         * Enter the message that should be sent in this email.
         */
        message?: {
          root: {
            type: string;
            children: {
              type: string;
              version: number;
              [k: string]: unknown;
            }[];
            direction: ('ltr' | 'rtl') | null;
            format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
            indent: number;
            version: number;
          };
          [k: string]: unknown;
        } | null;
        id?: string | null;
      }[]
    | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "ImageSliderBlock".
 */
export interface ImageSliderBlock {
  title?: string | null;
  slides?:
    | {
        image: string | Media;
        title: string;
        link?: string | null;
        id?: string | null;
      }[]
    | null;
  aspectRatio?: ('1:1' | '16:9' | '4:3' | '3:4') | null;
  backgroundColor?: string | null;
  id?: string | null;
  blockName?: string | null;
  blockType: 'imageSlider';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "CategoryGridBlock".
 */
export interface CategoryGridBlock {
  title?: string | null;
  description?: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  } | null;
  categorySelection?: ('all' | 'select') | null;
  categories?: (string | Category)[] | null;
  limit?: number | null;
  columns?: ('auto' | '2' | '3' | '4' | '6') | null;
  showCategoryNames?: boolean | null;
  id?: string | null;
  blockName?: string | null;
  blockType: 'categoryGrid';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "GoogleMapBlock".
 */
export interface GoogleMapBlock {
  title?: string | null;
  description?: string | null;
  /**
   * URL จาก Google Maps (ใช้ Share > Embed a map แล้วคัดลอก URL จาก iframe src)
   */
  mapEmbedUrl: string;
  height?: number | null;
  address?: string | null;
  phone?: string | null;
  email?: string | null;
  openingHours?: string | null;
  id?: string | null;
  blockName?: string | null;
  blockType: 'googleMap';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "ServiceFeaturesBlock".
 */
export interface ServiceFeaturesBlock {
  title?: string | null;
  subtitle?: string | null;
  style?: ('modern' | 'classic' | 'card' | 'minimal') | null;
  backgroundColor?: ('white' | 'light' | 'blue' | 'gradient') | null;
  features?:
    | {
        title: string;
        description?: string | null;
        iconType?:
          | ('cart' | 'phone' | 'lock' | 'truck' | 'return' | 'money' | 'gift' | 'ticket' | 'location' | 'check')
          | null;
        /**
         * ถ้าอัพโหลดไอคอนเอง จะใช้ไอคอนนี้แทนไอคอนที่เลือกข้างบน
         */
        customIcon?: (string | null) | Media;
        id?: string | null;
      }[]
    | null;
  animation?: ('none' | 'fade' | 'slideUp' | 'slideLeft' | 'bounce') | null;
  id?: string | null;
  blockName?: string | null;
  blockType: 'serviceFeatures';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "ProductsBlock".
 */
export interface ProductsBlock {
  title?: string | null;
  subtitle?: string | null;
  limit?: number | null;
  /**
   * แสดงเฉพาะสินค้าที่มีราคาลดพิเศษ
   */
  showOnlyOnSale?: boolean | null;
  /**
   * เลือกหมวดหมู่ที่ต้องการแสดง (ไม่เลือก = แสดงทุกหมวดหมู่)
   */
  categories?: (string | Category)[] | null;
  layout?: ('grid' | 'slider') | null;
  showViewAllButton?: boolean | null;
  viewAllLink?: string | null;
  id?: string | null;
  blockName?: string | null;
  blockType: 'productsBlock';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "QuoteRequestFormBlock".
 */
export interface QuoteRequestFormBlock {
  title?: string | null;
  description?: string | null;
  showInstructions?: boolean | null;
  showContactInfo?: boolean | null;
  maxFiles?: number | null;
  maxFileSize?: number | null;
  allowedFileTypes?: ('image' | 'pdf' | 'document')[] | null;
  submitButtonText?: string | null;
  successMessage?: string | null;
  contactInfo?: {
    phone?: string | null;
    email?: string | null;
    lineId?: string | null;
    workingHours?: string | null;
  };
  id?: string | null;
  blockName?: string | null;
  blockType: 'quoteRequestFormBlock';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "products".
 */
export interface Product {
  id: string;
  title: string;
  description?: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  } | null;
  /**
   * คำอธิบายสั้นๆ สำหรับแสดงในรายการสินค้า (แนะนำ 100-150 ตัวอักษร)
   */
  shortDescription?: string | null;
  price: number;
  /**
   * ใส่ราคาลดพิเศษ (ถ้ามี)
   */
  salePrice?: number | null;
  stock?: number | null;
  /**
   * รหัสสินค้าเฉพาะ (ถ้ามี)
   */
  sku?: string | null;
  images?:
    | {
        image: string | Media;
        /**
         * คำอธิบายรูปภาพสำหรับ SEO และผู้พิการทางสายตา
         */
        alt?: string | null;
        id?: string | null;
      }[]
    | null;
  /**
   * เพิ่มตัวเลือกย่อยเช่น ขนาด สี หรือประเภทต่างๆ ของสินค้า
   */
  variants?:
    | {
        /**
         * เช่น "4 หุน", "6 หุน", "สีแดง", "ขนาด L" เป็นต้น
         */
        variantName: string;
        /**
         * ราคาเฉพาะของตัวเลือกนี้
         */
        variantPrice: number;
        /**
         * ราคาลดพิเศษของตัวเลือกนี้ (ถ้ามี)
         */
        variantSalePrice?: number | null;
        /**
         * จำนวนสินค้าคงเหลือของตัวเลือกนี้
         */
        variantStock?: number | null;
        /**
         * รหัสสินค้าเฉพาะของตัวเลือกนี้
         */
        variantSku?: string | null;
        /**
         * รูปภาพที่แสดงเฉพาะตัวเลือกนี้ (ถ้าไม่มีจะใช้รูปหลักของสินค้า)
         */
        variantImages?:
          | {
              image: string | Media;
              /**
               * คำอธิบายรูปภาพสำหรับ SEO และผู้พิการทางสายตา
               */
              alt?: string | null;
              id?: string | null;
            }[]
          | null;
        /**
         * สถานะของตัวเลือกนี้
         */
        variantStatus?: ('active' | 'inactive' | 'out_of_stock') | null;
        /**
         * กำหนดให้ตัวเลือกนี้เป็นตัวเลือกหลักที่แสดงก่อน
         */
        isDefault?: boolean | null;
        id?: string | null;
      }[]
    | null;
  categories: (string | Category)[];
  /**
   * แสดงในหน้าแรกและหมวดสินค้าแนะนำ
   */
  featured?: boolean | null;
  status?: ('active' | 'inactive' | 'out_of_stock' | 'discontinued') | null;
  specifications?:
    | {
        label: string;
        value: string;
        id?: string | null;
      }[]
    | null;
  relatedProducts?: (string | Product)[] | null;
  addLineButton?: {
    enabled?: boolean | null;
    label?: string | null;
    /**
     * ลิงก์ LINE Official Account เช่น https://line.me/R/ti/p/@yourlineID
     */
    lineUrl?: string | null;
  };
  callButton?: {
    enabled?: boolean | null;
    label?: string | null;
    /**
     * เบอร์โทรศัพท์ เช่น 02-434-8319 หรือ 081-234-5678
     */
    phoneNumber?: string | null;
  };
  quoteButton?: {
    enabled?: boolean | null;
    label?: string | null;
    /**
     * เลือกหน้าหรือใส่ลิงก์สำหรับหน้าขอเสนอราคา
     */
    quoteLink?: {
      type?: ('reference' | 'custom') | null;
      newTab?: boolean | null;
      reference?:
        | ({
            relationTo: 'pages';
            value: string | Page;
          } | null)
        | ({
            relationTo: 'posts';
            value: string | Post;
          } | null);
      url?: string | null;
      /**
       * Choose how the link should be rendered.
       */
      appearance?: ('default' | 'outline') | null;
    };
  };
  meta?: {
    /**
     * หัวข้อที่แสดงใน Google Search (แนะนำ 50-60 ตัวอักษร)
     */
    title?: string | null;
    /**
     * คำอธิบายที่แสดงใน Google Search (แนะนำ 150-160 ตัวอักษร)
     */
    description?: string | null;
    /**
     * คำสำคัญสำหรับการค้นหา (คั่นด้วยเครื่องหมายจุลภาค)
     */
    keywords?: string | null;
  };
  /**
   * ข้อมูลที่แสดงเมื่อแชร์ลิงก์ใน Facebook, LINE, หรือโซเชียลอื่นๆ
   */
  openGraph?: {
    /**
     * หัวข้อที่แสดงเมื่อแชร์ (จะใช้ SEO Title หากไม่ได้กรอก)
     */
    title?: string | null;
    /**
     * คำอธิบายที่แสดงเมื่อแชร์ (จะใช้ Meta Description หากไม่ได้กรอก)
     */
    description?: string | null;
    /**
     * รูปภาพที่แสดงเมื่อแชร์ (แนะนำ 1200x630px) จะใช้รูปแรกของสินค้าหากไม่ได้เลือก
     */
    image?: (string | null) | Media;
  };
  /**
   * ข้อมูลโครงสร้างสำหรับ Google Rich Snippets
   */
  structuredData?: {
    /**
     * ชื่อยี่ห้อหรือผู้ผลิตสินค้า
     */
    brand?: string | null;
    /**
     * รุ่นหรือโมเดลของสินค้า
     */
    model?: string | null;
    /**
     * รหัส GTIN, UPC, หรือ EAN ของสินค้า (ถ้ามี)
     */
    gtin?: string | null;
    /**
     * รหัสชิ้นส่วนจากผู้ผลิต
     */
    mpn?: string | null;
    condition?: ('new' | 'used' | 'refurbished' | 'damaged') | null;
    availability?: ('in_stock' | 'out_of_stock' | 'preorder' | 'discontinued') | null;
    /**
     * วันที่ราคานี้จะหมดอายุ (สำหรับ Google)
     */
    priceValidUntil?: string | null;
  };
  slug?: string | null;
  slugLock?: boolean | null;
  publishedAt?: string | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "quote-requests".
 */
export interface QuoteRequest {
  id: string;
  customerName: string;
  email: string;
  phone: string;
  status?: ('new' | 'in-progress' | 'quoted' | 'closed-won' | 'closed-lost') | null;
  priority?: ('high' | 'medium' | 'low') | null;
  assignedTo?: (string | null) | User;
  productList: string;
  additionalNotes?: string | null;
  /**
   * รูปภาพหรือเอกสารประกอบ (สูงสุด 3 ไฟล์)
   */
  attachments?: (string | Media)[] | null;
  followUpDate?: string | null;
  estimatedValue?: number | null;
  quotedAmount?: number | null;
  /**
   * บันทึกการสื่อสาร การประชุม หรือข้อมูลสำคัญอื่นๆ
   */
  notes?: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  } | null;
  quotationFile?: (string | null) | Media;
  contractFile?: (string | null) | Media;
  relatedDocuments?: (string | Media)[] | null;
  source?: ('website' | 'phone' | 'email' | 'line' | 'facebook' | 'referral' | 'other') | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "redirects".
 */
export interface Redirect {
  id: string;
  /**
   * You will need to rebuild the website when changing this field.
   */
  from: string;
  to?: {
    type?: ('reference' | 'custom') | null;
    reference?:
      | ({
          relationTo: 'pages';
          value: string | Page;
        } | null)
      | ({
          relationTo: 'posts';
          value: string | Post;
        } | null);
    url?: string | null;
  };
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "form-submissions".
 */
export interface FormSubmission {
  id: string;
  form: string | Form;
  submissionData?:
    | {
        field: string;
        value: string;
        id?: string | null;
      }[]
    | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This is a collection of automatically created search results. These results are used by the global site search and will be updated automatically as documents in the CMS are created or updated.
 *
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "search".
 */
export interface Search {
  id: string;
  title?: string | null;
  priority?: number | null;
  doc: {
    relationTo: 'posts';
    value: string | Post;
  };
  slug?: string | null;
  meta?: {
    title?: string | null;
    description?: string | null;
    image?: (string | null) | Media;
  };
  categories?:
    | {
        relationTo?: string | null;
        categoryID?: string | null;
        title?: string | null;
        id?: string | null;
      }[]
    | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-jobs".
 */
export interface PayloadJob {
  id: string;
  /**
   * Input data provided to the job
   */
  input?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  taskStatus?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  completedAt?: string | null;
  totalTried?: number | null;
  /**
   * If hasError is true this job will not be retried
   */
  hasError?: boolean | null;
  /**
   * If hasError is true, this is the error that caused it
   */
  error?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  /**
   * Task execution log
   */
  log?:
    | {
        executedAt: string;
        completedAt: string;
        taskSlug: 'inline' | 'schedulePublish';
        taskID: string;
        input?:
          | {
              [k: string]: unknown;
            }
          | unknown[]
          | string
          | number
          | boolean
          | null;
        output?:
          | {
              [k: string]: unknown;
            }
          | unknown[]
          | string
          | number
          | boolean
          | null;
        state: 'failed' | 'succeeded';
        error?:
          | {
              [k: string]: unknown;
            }
          | unknown[]
          | string
          | number
          | boolean
          | null;
        id?: string | null;
      }[]
    | null;
  taskSlug?: ('inline' | 'schedulePublish') | null;
  queue?: string | null;
  waitUntil?: string | null;
  processing?: boolean | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-locked-documents".
 */
export interface PayloadLockedDocument {
  id: string;
  document?:
    | ({
        relationTo: 'categories';
        value: string | Category;
      } | null)
    | ({
        relationTo: 'media';
        value: string | Media;
      } | null)
    | ({
        relationTo: 'pages';
        value: string | Page;
      } | null)
    | ({
        relationTo: 'posts';
        value: string | Post;
      } | null)
    | ({
        relationTo: 'products';
        value: string | Product;
      } | null)
    | ({
        relationTo: 'users';
        value: string | User;
      } | null)
    | ({
        relationTo: 'quote-requests';
        value: string | QuoteRequest;
      } | null)
    | ({
        relationTo: 'redirects';
        value: string | Redirect;
      } | null)
    | ({
        relationTo: 'forms';
        value: string | Form;
      } | null)
    | ({
        relationTo: 'form-submissions';
        value: string | FormSubmission;
      } | null)
    | ({
        relationTo: 'search';
        value: string | Search;
      } | null)
    | ({
        relationTo: 'payload-jobs';
        value: string | PayloadJob;
      } | null);
  globalSlug?: string | null;
  user: {
    relationTo: 'users';
    value: string | User;
  };
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-preferences".
 */
export interface PayloadPreference {
  id: string;
  user: {
    relationTo: 'users';
    value: string | User;
  };
  key?: string | null;
  value?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-migrations".
 */
export interface PayloadMigration {
  id: string;
  name?: string | null;
  batch?: number | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "categories_select".
 */
export interface CategoriesSelect<T extends boolean = true> {
  title?: T;
  description?: T;
  image?: T;
  sortOrder?: T;
  displayOrder?: T;
  isActive?: T;
  slug?: T;
  slugLock?: T;
  parent?: T;
  breadcrumbs?:
    | T
    | {
        doc?: T;
        url?: T;
        label?: T;
        id?: T;
      };
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "media_select".
 */
export interface MediaSelect<T extends boolean = true> {
  alt?: T;
  caption?: T;
  updatedAt?: T;
  createdAt?: T;
  url?: T;
  thumbnailURL?: T;
  filename?: T;
  mimeType?: T;
  filesize?: T;
  width?: T;
  height?: T;
  focalX?: T;
  focalY?: T;
  sizes?:
    | T
    | {
        thumbnail?:
          | T
          | {
              url?: T;
              width?: T;
              height?: T;
              mimeType?: T;
              filesize?: T;
              filename?: T;
            };
        card?:
          | T
          | {
              url?: T;
              width?: T;
              height?: T;
              mimeType?: T;
              filesize?: T;
              filename?: T;
            };
        feature?:
          | T
          | {
              url?: T;
              width?: T;
              height?: T;
              mimeType?: T;
              filesize?: T;
              filename?: T;
            };
      };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "pages_select".
 */
export interface PagesSelect<T extends boolean = true> {
  title?: T;
  hero?:
    | T
    | {
        type?: T;
        colorTheme?: T;
        backgroundImage?: T;
        layoutVariant?: T;
        showDecorations?: T;
        richText?: T;
        links?:
          | T
          | {
              link?:
                | T
                | {
                    type?: T;
                    newTab?: T;
                    reference?: T;
                    url?: T;
                    label?: T;
                    appearance?: T;
                  };
              id?: T;
            };
        media?: T;
        slideImages?:
          | T
          | {
              image?: T;
              caption?: T;
              id?: T;
            };
        showCategoriesDropdown?: T;
        categoriesLimit?: T;
        featuredText?: T;
        displayFrame?: T;
        framedHeroContent?:
          | T
          | {
              heroContentText?:
                | T
                | {
                    text?: T;
                    id?: T;
                    blockName?: T;
                  };
              heroContentImage?:
                | T
                | {
                    image?: T;
                    caption?: T;
                    id?: T;
                    blockName?: T;
                  };
              heroContentSpacer?:
                | T
                | {
                    height?: T;
                    id?: T;
                    blockName?: T;
                  };
            };
        heroActionSlots?:
          | T
          | {
              icon?: T;
              title?: T;
              description?: T;
              slotLink?:
                | T
                | {
                    link?:
                      | T
                      | {
                          type?: T;
                          newTab?: T;
                          reference?: T;
                          url?: T;
                          label?: T;
                        };
                    id?: T;
                  };
              id?: T;
            };
        socialMediaButtons?:
          | T
          | {
              label?: T;
              icon?: T;
              url?: T;
              newTab?: T;
              id?: T;
            };
      };
  layout?:
    | T
    | {
        cta?: T | CallToActionBlockSelect<T>;
        code?: T | CodeBlockSelect<T>;
        content?: T | ContentBlockSelect<T>;
        mediaBlock?: T | MediaBlockSelect<T>;
        archive?: T | ArchiveBlockSelect<T>;
        formBlock?: T | FormBlockSelect<T>;
        imageSlider?: T | ImageSliderBlockSelect<T>;
        categoryGrid?: T | CategoryGridBlockSelect<T>;
        googleMap?: T | GoogleMapBlockSelect<T>;
        serviceFeatures?: T | ServiceFeaturesBlockSelect<T>;
        productsBlock?: T | ProductsBlockSelect<T>;
        quoteRequestFormBlock?: T | QuoteRequestFormBlockSelect<T>;
      };
  meta?:
    | T
    | {
        title?: T;
        description?: T;
        keywords?: T;
        image?: T;
      };
  publishedAt?: T;
  slug?: T;
  slugLock?: T;
  updatedAt?: T;
  createdAt?: T;
  _status?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "CallToActionBlock_select".
 */
export interface CallToActionBlockSelect<T extends boolean = true> {
  richText?: T;
  links?:
    | T
    | {
        link?:
          | T
          | {
              type?: T;
              newTab?: T;
              reference?: T;
              url?: T;
              label?: T;
              appearance?: T;
            };
        id?: T;
      };
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "CodeBlock_select".
 */
export interface CodeBlockSelect<T extends boolean = true> {
  language?: T;
  code?: T;
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "ContentBlock_select".
 */
export interface ContentBlockSelect<T extends boolean = true> {
  columns?:
    | T
    | {
        size?: T;
        richText?: T;
        enableLink?: T;
        link?:
          | T
          | {
              type?: T;
              newTab?: T;
              reference?: T;
              url?: T;
              label?: T;
              appearance?: T;
            };
        id?: T;
      };
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "MediaBlock_select".
 */
export interface MediaBlockSelect<T extends boolean = true> {
  media?: T;
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "ArchiveBlock_select".
 */
export interface ArchiveBlockSelect<T extends boolean = true> {
  introContent?: T;
  populateBy?: T;
  relationTo?: T;
  categories?: T;
  limit?: T;
  selectedDocs?: T;
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "FormBlock_select".
 */
export interface FormBlockSelect<T extends boolean = true> {
  form?: T;
  enableIntro?: T;
  introContent?: T;
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "ImageSliderBlock_select".
 */
export interface ImageSliderBlockSelect<T extends boolean = true> {
  title?: T;
  slides?:
    | T
    | {
        image?: T;
        title?: T;
        link?: T;
        id?: T;
      };
  aspectRatio?: T;
  backgroundColor?: T;
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "CategoryGridBlock_select".
 */
export interface CategoryGridBlockSelect<T extends boolean = true> {
  title?: T;
  description?: T;
  categorySelection?: T;
  categories?: T;
  limit?: T;
  columns?: T;
  showCategoryNames?: T;
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "GoogleMapBlock_select".
 */
export interface GoogleMapBlockSelect<T extends boolean = true> {
  title?: T;
  description?: T;
  mapEmbedUrl?: T;
  height?: T;
  address?: T;
  phone?: T;
  email?: T;
  openingHours?: T;
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "ServiceFeaturesBlock_select".
 */
export interface ServiceFeaturesBlockSelect<T extends boolean = true> {
  title?: T;
  subtitle?: T;
  style?: T;
  backgroundColor?: T;
  features?:
    | T
    | {
        title?: T;
        description?: T;
        iconType?: T;
        customIcon?: T;
        id?: T;
      };
  animation?: T;
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "ProductsBlock_select".
 */
export interface ProductsBlockSelect<T extends boolean = true> {
  title?: T;
  subtitle?: T;
  limit?: T;
  showOnlyOnSale?: T;
  categories?: T;
  layout?: T;
  showViewAllButton?: T;
  viewAllLink?: T;
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "QuoteRequestFormBlock_select".
 */
export interface QuoteRequestFormBlockSelect<T extends boolean = true> {
  title?: T;
  description?: T;
  showInstructions?: T;
  showContactInfo?: T;
  maxFiles?: T;
  maxFileSize?: T;
  allowedFileTypes?: T;
  submitButtonText?: T;
  successMessage?: T;
  contactInfo?:
    | T
    | {
        phone?: T;
        email?: T;
        lineId?: T;
        workingHours?: T;
      };
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "posts_select".
 */
export interface PostsSelect<T extends boolean = true> {
  title?: T;
  heroImage?: T;
  content?: T;
  relatedPosts?: T;
  categories?: T;
  meta?:
    | T
    | {
        title?: T;
        image?: T;
        description?: T;
      };
  publishedAt?: T;
  authors?: T;
  populatedAuthors?:
    | T
    | {
        id?: T;
        name?: T;
      };
  slug?: T;
  slugLock?: T;
  updatedAt?: T;
  createdAt?: T;
  _status?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "products_select".
 */
export interface ProductsSelect<T extends boolean = true> {
  title?: T;
  description?: T;
  shortDescription?: T;
  price?: T;
  salePrice?: T;
  stock?: T;
  sku?: T;
  images?:
    | T
    | {
        image?: T;
        alt?: T;
        id?: T;
      };
  variants?:
    | T
    | {
        variantName?: T;
        variantPrice?: T;
        variantSalePrice?: T;
        variantStock?: T;
        variantSku?: T;
        variantImages?:
          | T
          | {
              image?: T;
              alt?: T;
              id?: T;
            };
        variantStatus?: T;
        isDefault?: T;
        id?: T;
      };
  categories?: T;
  featured?: T;
  status?: T;
  specifications?:
    | T
    | {
        label?: T;
        value?: T;
        id?: T;
      };
  relatedProducts?: T;
  addLineButton?:
    | T
    | {
        enabled?: T;
        label?: T;
        lineUrl?: T;
      };
  callButton?:
    | T
    | {
        enabled?: T;
        label?: T;
        phoneNumber?: T;
      };
  quoteButton?:
    | T
    | {
        enabled?: T;
        label?: T;
        quoteLink?:
          | T
          | {
              type?: T;
              newTab?: T;
              reference?: T;
              url?: T;
              appearance?: T;
            };
      };
  meta?:
    | T
    | {
        title?: T;
        description?: T;
        keywords?: T;
      };
  openGraph?:
    | T
    | {
        title?: T;
        description?: T;
        image?: T;
      };
  structuredData?:
    | T
    | {
        brand?: T;
        model?: T;
        gtin?: T;
        mpn?: T;
        condition?: T;
        availability?: T;
        priceValidUntil?: T;
      };
  slug?: T;
  slugLock?: T;
  publishedAt?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "users_select".
 */
export interface UsersSelect<T extends boolean = true> {
  name?: T;
  role?: T;
  updatedAt?: T;
  createdAt?: T;
  email?: T;
  resetPasswordToken?: T;
  resetPasswordExpiration?: T;
  salt?: T;
  hash?: T;
  loginAttempts?: T;
  lockUntil?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "quote-requests_select".
 */
export interface QuoteRequestsSelect<T extends boolean = true> {
  customerName?: T;
  email?: T;
  phone?: T;
  status?: T;
  priority?: T;
  assignedTo?: T;
  productList?: T;
  additionalNotes?: T;
  attachments?: T;
  followUpDate?: T;
  estimatedValue?: T;
  quotedAmount?: T;
  notes?: T;
  quotationFile?: T;
  contractFile?: T;
  relatedDocuments?: T;
  source?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "redirects_select".
 */
export interface RedirectsSelect<T extends boolean = true> {
  from?: T;
  to?:
    | T
    | {
        type?: T;
        reference?: T;
        url?: T;
      };
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "forms_select".
 */
export interface FormsSelect<T extends boolean = true> {
  title?: T;
  fields?:
    | T
    | {
        checkbox?:
          | T
          | {
              name?: T;
              label?: T;
              width?: T;
              required?: T;
              defaultValue?: T;
              id?: T;
              blockName?: T;
            };
        country?:
          | T
          | {
              name?: T;
              label?: T;
              width?: T;
              required?: T;
              id?: T;
              blockName?: T;
            };
        email?:
          | T
          | {
              name?: T;
              label?: T;
              width?: T;
              required?: T;
              id?: T;
              blockName?: T;
            };
        message?:
          | T
          | {
              message?: T;
              id?: T;
              blockName?: T;
            };
        number?:
          | T
          | {
              name?: T;
              label?: T;
              width?: T;
              defaultValue?: T;
              required?: T;
              id?: T;
              blockName?: T;
            };
        select?:
          | T
          | {
              name?: T;
              label?: T;
              width?: T;
              defaultValue?: T;
              placeholder?: T;
              options?:
                | T
                | {
                    label?: T;
                    value?: T;
                    id?: T;
                  };
              required?: T;
              id?: T;
              blockName?: T;
            };
        state?:
          | T
          | {
              name?: T;
              label?: T;
              width?: T;
              required?: T;
              id?: T;
              blockName?: T;
            };
        text?:
          | T
          | {
              name?: T;
              label?: T;
              width?: T;
              defaultValue?: T;
              required?: T;
              id?: T;
              blockName?: T;
            };
        textarea?:
          | T
          | {
              name?: T;
              label?: T;
              width?: T;
              defaultValue?: T;
              required?: T;
              id?: T;
              blockName?: T;
            };
      };
  submitButtonLabel?: T;
  confirmationType?: T;
  confirmationMessage?: T;
  redirect?:
    | T
    | {
        url?: T;
      };
  emails?:
    | T
    | {
        emailTo?: T;
        cc?: T;
        bcc?: T;
        replyTo?: T;
        emailFrom?: T;
        subject?: T;
        message?: T;
        id?: T;
      };
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "form-submissions_select".
 */
export interface FormSubmissionsSelect<T extends boolean = true> {
  form?: T;
  submissionData?:
    | T
    | {
        field?: T;
        value?: T;
        id?: T;
      };
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "search_select".
 */
export interface SearchSelect<T extends boolean = true> {
  title?: T;
  priority?: T;
  doc?: T;
  slug?: T;
  meta?:
    | T
    | {
        title?: T;
        description?: T;
        image?: T;
      };
  categories?:
    | T
    | {
        relationTo?: T;
        categoryID?: T;
        title?: T;
        id?: T;
      };
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-jobs_select".
 */
export interface PayloadJobsSelect<T extends boolean = true> {
  input?: T;
  taskStatus?: T;
  completedAt?: T;
  totalTried?: T;
  hasError?: T;
  error?: T;
  log?:
    | T
    | {
        executedAt?: T;
        completedAt?: T;
        taskSlug?: T;
        taskID?: T;
        input?: T;
        output?: T;
        state?: T;
        error?: T;
        id?: T;
      };
  taskSlug?: T;
  queue?: T;
  waitUntil?: T;
  processing?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-locked-documents_select".
 */
export interface PayloadLockedDocumentsSelect<T extends boolean = true> {
  document?: T;
  globalSlug?: T;
  user?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-preferences_select".
 */
export interface PayloadPreferencesSelect<T extends boolean = true> {
  user?: T;
  key?: T;
  value?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-migrations_select".
 */
export interface PayloadMigrationsSelect<T extends boolean = true> {
  name?: T;
  batch?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "header".
 */
export interface Header {
  id: string;
  /**
   * ข้อมูลโลโก้และชื่อบริษัทที่จะแสดงใน Header
   */
  logo: {
    /**
     * อัปโหลดรูปโลโก้ (ถ้าไม่ใส่จะใช้โลโก้เริ่มต้น)
     */
    logoImage?: (string | null) | Media;
    companyName: string;
    companySubtitle: string;
    /**
     * รหัสสี Hex สำหรับพื้นหลังโลโก้ (เช่น #1E40AF)
     */
    logoBackgroundColor?: string | null;
    /**
     * รหัสสี Hex สำหรับชื่อบริษัท (เช่น #1E40AF)
     */
    companyNameColor?: string | null;
  };
  navItems?:
    | {
        link: {
          type?: ('reference' | 'custom') | null;
          newTab?: boolean | null;
          reference?:
            | ({
                relationTo: 'pages';
                value: string | Page;
              } | null)
            | ({
                relationTo: 'posts';
                value: string | Post;
              } | null);
          url?: string | null;
          label: string;
        };
        id?: string | null;
      }[]
    | null;
  updatedAt?: string | null;
  createdAt?: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "footer".
 */
export interface Footer {
  id: string;
  navItems?:
    | {
        link: {
          type?: ('reference' | 'custom') | null;
          newTab?: boolean | null;
          reference?:
            | ({
                relationTo: 'pages';
                value: string | Page;
              } | null)
            | ({
                relationTo: 'posts';
                value: string | Post;
              } | null);
          url?: string | null;
          label: string;
        };
        id?: string | null;
      }[]
    | null;
  updatedAt?: string | null;
  createdAt?: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "category-showcase".
 */
export interface CategoryShowcase {
  id: string;
  /**
   * หมวดหมู่สินค้าที่จะแสดงในส่วนแนะนำของหน้าแรก (แนะนำให้แสดง 4 หมวดหมู่)
   */
  categories?:
    | {
        title: string;
        subtitle?: string | null;
        image: string | Media;
        link: {
          type?: ('reference' | 'custom') | null;
          newTab?: boolean | null;
          reference?:
            | ({
                relationTo: 'pages';
                value: string | Page;
              } | null)
            | ({
                relationTo: 'posts';
                value: string | Post;
              } | null);
          url?: string | null;
          label: string;
        };
        id?: string | null;
      }[]
    | null;
  updatedAt?: string | null;
  createdAt?: string | null;
}
/**
 * จัดการข้อมูล SEO และการตั้งค่าทั่วไปของเว็บไซต์
 *
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "site-settings".
 */
export interface SiteSetting {
  id: string;
  /**
   * ชื่อที่จะแสดงใน browser tab และเป็นชื่อเว็บไซต์หลัก
   */
  siteName: string;
  /**
   * คำโปรยที่จะแสดงต่อจากชื่อเว็บไซต์
   */
  siteTagline?: string | null;
  /**
   * คำอธิบายที่จะแสดงใน Google Search และเมื่อแชร์ลิงก์ (แนะนำ 150-160 ตัวอักษร)
   */
  siteDescription?: string | null;
  /**
   * คำสำคัญสำหรับการค้นหา (คั่นด้วยเครื่องหมายจุลภาค)
   */
  siteKeywords?: string | null;
  /**
   * รูปภาพที่จะแสดงเมื่อแชร์ลิงก์ใน Facebook, LINE, Twitter (แนะนำ 1200x630px)
   */
  ogImage?: (string | null) | Media;
  companyName?: string | null;
  /**
   * ที่อยู่ของบริษัท
   */
  address?: string | null;
  /**
   * เบอร์โทรศัพท์หลัก
   */
  phone?: string | null;
  /**
   * อีเมลติดต่อหลัก
   */
  email?: string | null;
  businessHours?: string | null;
  /**
   * ลิงก์ Facebook Page
   */
  facebook?: string | null;
  /**
   * LINE ID หรือ LINE URL
   */
  line?: string | null;
  /**
   * Twitter username (รวม @)
   */
  twitterHandle?: string | null;
  /**
   * URL ของ favicon (ไอคอนที่แสดงใน browser tab)
   */
  faviconUrl?: string | null;
  /**
   * Google Analytics Tracking ID (GA4)
   */
  googleAnalyticsId?: string | null;
  enableSiteMap?: boolean | null;
  updatedAt?: string | null;
  createdAt?: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "header_select".
 */
export interface HeaderSelect<T extends boolean = true> {
  logo?:
    | T
    | {
        logoImage?: T;
        companyName?: T;
        companySubtitle?: T;
        logoBackgroundColor?: T;
        companyNameColor?: T;
      };
  navItems?:
    | T
    | {
        link?:
          | T
          | {
              type?: T;
              newTab?: T;
              reference?: T;
              url?: T;
              label?: T;
            };
        id?: T;
      };
  updatedAt?: T;
  createdAt?: T;
  globalType?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "footer_select".
 */
export interface FooterSelect<T extends boolean = true> {
  navItems?:
    | T
    | {
        link?:
          | T
          | {
              type?: T;
              newTab?: T;
              reference?: T;
              url?: T;
              label?: T;
            };
        id?: T;
      };
  updatedAt?: T;
  createdAt?: T;
  globalType?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "category-showcase_select".
 */
export interface CategoryShowcaseSelect<T extends boolean = true> {
  categories?:
    | T
    | {
        title?: T;
        subtitle?: T;
        image?: T;
        link?:
          | T
          | {
              type?: T;
              newTab?: T;
              reference?: T;
              url?: T;
              label?: T;
            };
        id?: T;
      };
  updatedAt?: T;
  createdAt?: T;
  globalType?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "site-settings_select".
 */
export interface SiteSettingsSelect<T extends boolean = true> {
  siteName?: T;
  siteTagline?: T;
  siteDescription?: T;
  siteKeywords?: T;
  ogImage?: T;
  companyName?: T;
  address?: T;
  phone?: T;
  email?: T;
  businessHours?: T;
  facebook?: T;
  line?: T;
  twitterHandle?: T;
  faviconUrl?: T;
  googleAnalyticsId?: T;
  enableSiteMap?: T;
  updatedAt?: T;
  createdAt?: T;
  globalType?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "TaskSchedulePublish".
 */
export interface TaskSchedulePublish {
  input: {
    type?: ('publish' | 'unpublish') | null;
    locale?: string | null;
    doc?:
      | ({
          relationTo: 'pages';
          value: string | Page;
        } | null)
      | ({
          relationTo: 'posts';
          value: string | Post;
        } | null);
    global?: string | null;
    user?: (string | null) | User;
  };
  output?: unknown;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "BannerBlock".
 */
export interface BannerBlock {
  style: 'info' | 'warning' | 'error' | 'success';
  content: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  };
  id?: string | null;
  blockName?: string | null;
  blockType: 'banner';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "auth".
 */
export interface Auth {
  [k: string]: unknown;
}


declare module 'payload' {
  export interface GeneratedTypes extends Config {}
}